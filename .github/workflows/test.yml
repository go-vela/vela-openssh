# name of the action
name: test

# trigger on pull_request or push events
on:
  pull_request:
  push:

# pipeline to execute
jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
    - name: clone
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: install go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        # use version from go.mod file
        go-version-file: 'go.mod'
        cache: true
        check-latest: true

    - name: test
      run: |
        go test -covermode=atomic -coverprofile=coverage.out ./...

    - name: coverage
      uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.5.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.out

  integration-test:
    runs-on: ubuntu-latest
    needs:
    - unit-test

    steps:
    - name: checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: install go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        # use version from go.mod file
        go-version-file: 'go.mod'
        cache: true
        check-latest: true

    - name: build for integration test
      env:
        GOOS: linux
        CGO_ENABLED: '0'
      run: make build-static-ci

    - name: integration test with fake server
      run: make docker-build && make docker-test

  gha-publish-test:
    runs-on: ubuntu-latest

    steps:
    - name: clone
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        # ensures we fetch tag history for the repository
        fetch-depth: 0

    - name: install go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        # use version from go.mod file
        go-version-file: 'go.mod'
        cache: true
        check-latest: true

    - name: build
      env:
        GOOS: linux
        CGO_ENABLED: '0'
      run: |
        make build-static-ci

    - name: grab dependency versions from makefile
      run: |
        grep "^OPENSSH.*=" Makefile >> $GITHUB_ENV
        grep "^SSHPASS_VERSION.*=" Makefile >> $GITHUB_ENV

    - name: publish scp
      uses: elgohr/Publish-Docker-Github-Action@eb53b3ec07136a6ebaed78d8135806da64f7c7e2 # v5
      with:
        name: target/vela-scp
        cache: true
        dockerfile: Dockerfile.scp
        no_push: true
        tags: test
        buildargs: OPENSSH_VERSION,SSHPASS_VERSION

    - name: publish ssh
      uses: elgohr/Publish-Docker-Github-Action@eb53b3ec07136a6ebaed78d8135806da64f7c7e2 # v5
      with:
        name: target/vela-ssh
        cache: true
        dockerfile: Dockerfile.ssh
        no_push: true
        tags: test
        buildargs: OPENSSH_VERSION,SSHPASS_VERSION
